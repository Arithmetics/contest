datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Bet {
  id       Int     @id @default(autoincrement())
  user     User?   @relation("Betuser", fields: [userId], references: [id])
  userId   Int?    @map("user")
  choice   Choice? @relation("Betchoice", fields: [choiceId], references: [id])
  choiceId Int?    @map("choice")

  @@index([userId])
  @@index([choiceId])
}

model Choice {
  id        Int                  @id @default(autoincrement())
  selection ChoiceSelectionEnum?
  isWin     Boolean?
  line      Line?                @relation("Choiceline", fields: [lineId], references: [id])
  lineId    Int?                 @map("line")
  bets      Bet[]                @relation("Betchoice")

  @@index([lineId])
}

model Contest {
  id          Int           @id @default(autoincrement())
  name        String?
  description String?
  status      String?
  entryFee    Int?
  image       ContestImage? @relation("Contestimage", fields: [imageId], references: [id])
  imageId     Int?          @map("image")
  lines       Line[]        @relation("Linecontest")

  @@index([imageId])
}

model ContestImage {
  id      Int      @id @default(autoincrement())
  image   Json?
  altText String?
  contest Contest? @relation("Contestimage")
}

model Line {
  id          Int       @id @default(autoincrement())
  title       String?
  closingTime DateTime?
  benchmark   Float?
  contest     Contest?  @relation("Linecontest", fields: [contestId], references: [id])
  contestId   Int?      @map("contest")
  choices     Choice[]  @relation("Choiceline")

  @@index([contestId])
}

model User {
  id                      Int       @id @default(autoincrement())
  email                   String?   @unique
  name                    String?
  userName                String?   @unique
  password                String?
  isAdmin                 Boolean?
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
  bets                    Bet[]     @relation("Betuser")
}

enum ChoiceSelectionEnum {
  OVER
  UNDER
  AWAY
  HOME
}